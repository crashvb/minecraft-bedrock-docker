#!/bin/bash

source /usr/local/lib/entrypoint.sh

set -e -o pipefail

log "Checking for updates ..."
download_url=$(
	curl \
		--header "Accept-Encoding: identity" \
		--header "Accept-Language: en" \
		--header "Referer: https://www.minecraft.net/" \
		--location \
		--silent \
		--user-agent "crashvb/minecraft-bedrock" \
		"${MINECRAFT_DOWNLOAD_URL:=https://net-secondary.web.minecraft-services.net/api/v1.0/download/links}" | \
	jq --raw-output '.result.links[] | select(.downloadType=="serverBedrockLinux") | .downloadUrl'
)
version_deployed=$(cat "${MINECRAFT_HOME}/version" 2>/dev/null || true)
version_embedded=$(cat "${MINECRAFT_SHARE}/embedded/version" 2>/dev/null || true)
version_latest=$(
	log "${download_url}" | \
	grep --extended-regexp --only-matching "([0-9]{1,}\.)+[0-9]{1,}"
)

log "Version Latest   : ${version_latest}"
log "Version Deployed : ${version_deployed}"
log "Version Embedded : ${version_embedded}"

if [[ "X${version_latest}" != "X${version_embedded}" ]] ; then
	log "Embedding server version ${version_latest} ..."

	# Download to a temporary location ...
	path=$(mktemp --directory --suffix=".minecraft")
	tmp=$(mktemp --suffix=".zip")
	wget --output-document="${tmp}" --quiet "${download_url}"
	unzip -oq "${tmp}" -d "${path}"
	rm --force "${tmp}"

	# Customize ...
	rm --force "${path}/bedrock_server_symbols.debug"
	for i in $(cat "${MINECRAFT_SHARE}/$(basename "${0}").configs"); do
		mv "${path}/${i}" "${path}/${i}.dist"
		ln --force --symbolic "${MINECRAFT_CONFIG}/${i}" "${path}/${i}"
	done
	ln --force --symbolic "${MINECRAFT_CONFIG}/worlds" "${path}/worlds"
	echo "${version_latest}" > "${path}/version"

	# Atomic upgrade ...
	rm --force --recursive "${MINECRAFT_SHARE}/embedded"
	mv "${path}" "${MINECRAFT_SHARE}/embedded"
	log "Done."
else
	log "No updates available ..."
fi

